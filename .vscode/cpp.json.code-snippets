{
    // Place your leetcode workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "solution": {
        "prefix": "solution",
        "body": [
            "/**",
            " * @file ${TM_FILENAME}",
            " * @brief",
            " * @author chenqi (chenqi@imudges.com)",
            " * @version 1.0",
            " * @date ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
            " */",
            "#include <fstream>\n",
            "using namespace std;\n",
            "${CLIPBOARD}\n",
            "int main(int argc, char const *argv[]) {",
            "\tstring s = string(PROJECT_PATH).append(\"/${RELATIVE_FILEPATH/(.*)\\..+$/$1/}.txt\");",
            "\tchar buf[MAX_LINE_SIZE];",
            "\tifstream in(s, ios::binary | ios::in);",
            "\twhile (in.getline(buf, MAX_LINE_SIZE)) {",
            "\t\tSolution sol;",
            "\t\t$0",
            "\t\tauto ans = sol$3;",
            "\t\tstd::cout << ans << std::endl;",
            "\t}",
            "\treturn 0;\n}\n"
        ],
        "description": "Leetcode Solution"
    }
}